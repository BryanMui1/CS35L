#!/bin/bash

#Write a shell or Python script tzcount that accepts any revision-range argument that git log would accept, 
#and outputs a simple report of time zones and number of commits in that revision-range that come from that time zone. 

# Hard code list of time zones into an associative array
# Grep count the number of lines for each one in the file 

commit_log=$(mktemp)
commit_dates=$(mktemp)
unique_tz=$(mktemp)
declare -A timeZones

git log $1 --pretty=fuller > $commit_log
grep "CommitDate:" $commit_log | awk '{print $NF}' > $commit_dates

sort -r $commit_dates | uniq > $unique_tz

while IFS= read -r line; do
    echo -n "$line "
    grep -c "\\$line" $commit_dates
done < $unique_tz


rm $commit_dates
rm $commit_log
rm $unique_tz